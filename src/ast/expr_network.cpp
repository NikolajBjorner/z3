/*++
Copyright (c) 2019 Microsoft Corporation

Module Name:

    expr_network.cpp

Abstract:

    expr network.

Author:

    Nikolaj Bjorner (nbjorner) 6-14-2019

Revision History:

--*/

#include "ast/expr_network.h"

void expr_network::add_root(expr* e) {
    m_roots.push_back(e);
    svector<std::pair<expr*,expr*>> todo;
    todo.push_back(std::make_pair(e, nullptr));
    for (unsigned i = 0; i < todo.size(); ++i) {
        expr* e = todo[i].first;
        expr* p = todo[i].second;
        unsigned id = e->get_id();
        while (id >= m_nodes.size()) {
            expr_ref tmp(m);
            m_nodes.push_back(node(tmp));
        }
        node& n = m_nodes[id];
        if (p) {
            n.m_parents.push_back(p->get_id());
        }
        if (!n.m_expr && is_app(e)) {
            for (expr* arg : *to_app(e)) {
                n.m_children.push_back(arg->get_id());
                todo.push_back(std::make_pair(arg, e));
            }
        }
        n.m_expr = e;
    }
}

expr_ref_vector expr_network::get_roots() {
    unsigned_vector todo;
    todo.reserve(m_nodes.size(), 0);
    todo.reset();

    for (expr* r : m_roots) {
        todo.push_back(r->get_id());
    }
    expr_ref_vector node2expr(m);
    svector<bool> valid;
    ptr_vector<expr> args;
    valid.reserve(m_nodes.size(), false);
    for (auto const& n : m_nodes) {
        node2expr.push_back(n.m_expr);
    }
    while (!todo.empty()) {
        unsigned id = todo.back();
        if (valid[id]) {            
            todo.pop_back();
            continue;
        }
        bool all_valid = true;
        args.reset();
        for (unsigned child : m_nodes[id].m_children) {
            if (!valid[child]) {
                todo.push_back(child);
                all_valid = false;
            }
            else if (all_valid) {
                args.push_back(node2expr.get(child));
            }
        }
        if (all_valid) {
            expr* e = m_nodes[id].e();
            if (is_app(e)) {
                bool diff = false;
                for (unsigned i = args.size(); i-- > 0 && !diff; ) {
                    diff = args.get(i) != to_app(e)->get_arg(i);
                }
                func_decl* f = to_app(e)->get_decl();
                if (!diff) {
                    node2expr[id] = e;
                }
                else if (m.is_or(f)) {
                    node2expr[id] = m.mk_or(args.size(), args.c_ptr());
                }
                else if (m.is_and(f)) {
                    node2expr[id] = m.mk_and(args.size(), args.c_ptr());
                }
                else {
                    node2expr[id] = m.mk_app(f, args.size(), args.c_ptr());
                }
            }
            else {
                node2expr[id] = e;
            }
            valid[id] = true;
            todo.pop_back();
        }
    }
    expr_ref_vector result(m);
    for (expr* r : m_roots) {
        result.push_back(node2expr.get(r->get_id()));
    }
    return result;
}

void expr_network::substitute(unsigned src, unsigned dst) {
    if (src == dst) {
        return;
    }
    for (unsigned parent : m_nodes[src].m_parents) {
        for (unsigned& ch : m_nodes[parent].m_children) {
            if (ch == src) {
                ch = dst;
            }
        }
    }
    m_nodes[src].m_parents.reset();
}

unsigned_vector expr_network::top_sort() {
    unsigned_vector result;
    svector<bool> visit;
    visit.reserve(m_nodes.size(), false);
    unsigned_vector todo;
    for (node const& n : m_nodes) {
        if (n.e()) todo.push_back(n.id());
    }
    while (!todo.empty()) {
        unsigned id = todo.back();
        if (visit[id]) {
            todo.pop_back();
            continue;
        }
        bool all_visit = true;
        for (unsigned child : m_nodes[id].m_children) {
            if (!visit[child]) {
                todo.push_back(child);
                all_visit = false;
            }
        }
        if (all_visit) {
            visit[id] = true;
            result.push_back(id);
            todo.pop_back();
        }
    }
    return result;
}

vector<expr_network::cut_set> expr_network::get_cuts(unsigned max_cut_size, unsigned max_cutset_size) {
    unsigned_vector sorted = top_sort();
    vector<cut_set> cuts;
    cuts.resize(m_nodes.size());
    cut_set cut_set2;
    for (unsigned id : sorted) {
        auto& cut_set = cuts[id];
        SASSERT(cut_set.empty());
        node const& n = m_nodes[id];
        if (is_ite(n)) {
            for (auto const& a : cuts[n.m_children[0]]) {
                for (auto const& b : cuts[n.m_children[1]]) {
                    cut ab;
                    if (!ab.merge(a, b)) {
                        continue;
                    }
                    for (auto const& c : cuts[n.m_children[2]]) {
                        cut abc;
                        if (!abc.merge(ab, c)) {
                            continue;
                        }
                        uint64_t t1 = a.shift_table(abc);
                        uint64_t t2 = b.shift_table(abc);
                        uint64_t t3 = c.shift_table(abc);
                        abc.m_table = (t1 & t2) | (~t1 & t3);
                        cut_set.insert(abc);
                        if (cut_set.size() >= max_cutset_size) break;
                    } 
                }
            }
        }
        else if (is_not(n)) {
            for (auto const& a : cuts[n.m_children[0]]) {
                cut_set.push_back(a);
                cut_set.back().m_table = ~a.m_table;
            }
        }
        else if ((is_ac_bool_op(n)) && n.m_children.size() < max_cut_size) {
            bool first = true;
            for (unsigned child : n.m_children) {
                if (first) {
                    for (auto const& a : cuts[child]) {
                        cut_set.push_back(a);
                    }
                    first = false;
                    continue;
                }
                cut_set2.reset();
                for (auto const& a : cut_set) {
                    for (auto const& b : cuts[child]) {
                        cut c;
                        if (c.merge(a, b)) {
                            uint64_t t1 = a.shift_table(c);
                            uint64_t t2 = b.shift_table(c);
                            switch (get_decl_kind(n)) {
                            case OP_AND: c.m_table = t1 & t2; break;
                            case OP_OR:  c.m_table = t1 | t2; break;
                            case OP_XOR: c.m_table = t1 ^ t2; break;
                            case OP_EQ:  c.m_table = ~(t1 ^ t2); break;
                            default: UNREACHABLE(); break;
                            }
                            cut_set2.insert(c);
                        }
                    }
                    if (cut_set2.size() >= max_cutset_size) break;
                }
                cut_set.swap(cut_set2);
            }
        }
        cut_set.push_back(cut(id));
    }
    return cuts;
}

unsigned expr_network::depth(unsigned id) const {
    return get_depth(m_nodes[id].e());
}


bool expr_network::is_not(node const& n) const {
    return n.e() && m.is_not(n.e());
}

bool expr_network::is_ac_bool_op(node const& n) const {
    return n.e() && (m.is_and(n.e()) || m.is_or(n.e()) || m.is_iff(n.e()) || m.is_xor(n.e()));
}

bool expr_network::is_ite(node const& n) const {
    return n.e() && m.is_ite(n.e()) && m.is_bool(to_app(n.e())->get_arg(1));
}

decl_kind expr_network::get_decl_kind(node const& n) const {
    return to_app(n.e())->get_decl_kind();
}

/**
   \brief
   if c is subsumed by a member in cut_set, then c is not inserted.
   otherwise, remove members that c subsumes.
   Note that the cut_set maintains invariant that elements don't subsume each-other.

   TBD: this is a bottleneck.
   Ideas:
   - add Bloom filter to is_subset_of operation.
   - pre-allocate fixed array instead of vector for cut_set to avoid overhead for memory allocation.
 */

void expr_network::cut_set::insert(cut const& c) {
    unsigned i = 0, j = 0;
    for (; i < size(); ++i) {
        cut const& a = (*this)[i];
        if (a.subset_of(c)) {
            return;
        }
        if (c.subset_of(a)) {
            continue;
        }
        else if (j < i) {
            (*this)[j] = a;
        }
        SASSERT(!(a == c));
        ++j;
    }
    shrink(j);    
    push_back(c);
}

bool expr_network::cut_set::no_duplicates() const {
    hashtable<cut const*, cut::hash_proc, cut::eq_proc> table;
    for (auto const& cut : *this) {
        VERIFY(!table.contains(&cut));
        table.insert(&cut);
    }
    return true;
}


/**
   \brief shift table 'a' by adding elements from 'c'.
   a.shift_table(c)

   \pre 'a' is a subset of 'c'.

   Let 't' be the table for 'a'.

   i'th bit in t  is function of indices x0*2^0 + x2*2^1 = i
   i'th bit in t' is function of indices x0*2^0 + x1*2^1 + x2*2^2 = i

   i -> assignment to coefficients in c, 
     -> assignment to coefficients in a
     -> compute j, 
     -> t'[i] <- t'[j]

     This is still time consuming:
     Ideas: 
     - pre-compute some shift operations.
     - use strides on some common cases.
     - what ABC does?
 */

uint64_t expr_network::cut::shift_table(cut const& c) const {
    SASSERT(subset_of(c));
    uint64_t r = 0;
    unsigned new_sz = c.m_size;
    unsigned coeff[max_size+1];
    unsigned deficit[max_size+1];
    
    for (unsigned i = 0, j = 0, x = (*this)[i], y = c[j]; x != UINT_MAX; ) {
        if (x == y) {
            coeff[i] = (1 << j);
            deficit[i] = j - i;
            x = (*this)[++i];
        }
        y = c[++j];
    }
    for (unsigned j = 0; j < (1u << new_sz); ++j) {
        unsigned k = 0;
        for (unsigned i = 0; i < m_size; ++i) {
//            k += (deficit[i] >> (j & coeff[i]));
            if (0 != (j & coeff[i])) {
                k += (1 << i);
            }
        }
        r |= ((m_table & (1ull << k)) << (j - k));
    }
    return r;
}

bool expr_network::cut::operator==(cut const& other) const {
    if (m_size != other.m_size) return false;
    if (m_table != other.m_table) return false;
    for (unsigned i = 0; i < m_size; ++i) {
        if ((*this)[i] != other[i]) return false;
    }
    return true;
}

unsigned expr_network::cut::hash() const {
    return get_composite_hash(*this, m_size, 
                              [](cut const& c) { return (unsigned)c.m_table; }, 
                              [](cut const& c, unsigned i) { return c[i]; });
}

std::ostream& expr_network::cut::display(std::ostream& out) const {
    for (unsigned i = 0; i < m_size; ++i) {
        out << (*this)[i] << " ";
    }
    out << "t: ";
    for (unsigned i = 0; i < (1u << m_size); ++i) {
        if (0 != (m_table & (1ull << i))) out << "1"; else out << "0";
    }    
    return out;
}

void expr_network::cut::sort() {
    std::sort(m_elems, m_elems + m_size);
}

// TBD: use precompiled shift
static uint64_t compute_shift(uint64_t x, unsigned code) {
    switch (code) {
case 1: return (x & 1);
case 2: return ((x & 1) | ((x & 1) << 1));
case 4: return (((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2));
case 8: return ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4));
case 16: return (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8));
case 32: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) << 16));
case 64: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) << 16)) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) << 16)) << 32));
case 65: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) | (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) << 16)) | ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) | (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) << 16)) << 32));
case 33: return (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) | (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) << 16));
case 66: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) << 16)) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) << 16)) << 32));
case 67: return (((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) | ((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) << 16)) | (((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) | ((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) << 16)) << 32));
case 17: return ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8));
case 34: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) << 16));
case 68: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) << 16)) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) << 16)) << 32));
case 69: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) | (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) << 16)) | ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) | (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) << 16)) << 32));
case 35: return ((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) | ((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) << 16));
case 70: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) << 16)) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) << 16)) << 32));
case 71: return ((((x & 255) | ((x & 255) << 8)) | (((x & 255) | ((x & 255) << 8)) << 16)) | ((((x & 255) | ((x & 255) << 8)) | (((x & 255) | ((x & 255) << 8)) << 16)) << 32));
case 9: return (((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4));
case 18: return (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8));
case 36: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) << 16));
case 72: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) << 16)) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) << 16)) << 32));
case 73: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) | (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) << 16)) | ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) | (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) << 16)) << 32));
case 37: return (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) | (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) << 16));
case 74: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) << 16)) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) << 16)) << 32));
case 75: return (((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) | ((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) << 16)) | (((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) | ((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) << 16)) << 32));
case 19: return (((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8));
case 38: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) << 16));
case 76: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) << 16)) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) << 16)) << 32));
case 77: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) | (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) << 16)) | ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) | (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) << 16)) << 32));
case 39: return (((x & 255) | ((x & 255) << 8)) | (((x & 255) | ((x & 255) << 8)) << 16));
case 78: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) << 16)) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) << 16)) << 32));
case 79: return (((x & 65535) | ((x & 65535) << 16)) | (((x & 65535) | ((x & 65535) << 16)) << 32));
case 5: return ((x & 3) | ((x & 3) << 2));
case 10: return ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4));
case 20: return (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8));
case 40: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) << 16));
case 80: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) | ((((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) | (((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) << 4)) | ((((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) | (((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) << 4)) << 8))) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) | ((((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) | (((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) << 4)) | ((((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) | (((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) << 4)) << 8))) << 32));
case 81: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) | (((((x & 12) << 14) | (((x & 12) << 14) << 2)) | ((((x & 12) << 14) | (((x & 12) << 14) << 2)) << 4)) | (((((x & 12) << 14) | (((x & 12) << 14) << 2)) | ((((x & 12) << 14) | (((x & 12) << 14) << 2)) << 4)) << 8))) | ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) | (((((x & 12) << 14) | (((x & 12) << 14) << 2)) | ((((x & 12) << 14) | (((x & 12) << 14) << 2)) << 4)) | (((((x & 12) << 14) | (((x & 12) << 14) << 2)) | ((((x & 12) << 14) | (((x & 12) << 14) << 2)) << 4)) << 8))) << 32));
case 41: return (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) | (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) << 16));
case 82: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) << 4)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) << 4)) << 8))) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) << 4)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) << 4)) << 8))) << 32));
case 83: return (((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) | ((((x & 240) << 12) | (((x & 240) << 12) << 4)) | ((((x & 240) << 12) | (((x & 240) << 12) << 4)) << 8))) | (((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) | ((((x & 240) << 12) | (((x & 240) << 12) << 4)) | ((((x & 240) << 12) | (((x & 240) << 12) << 4)) << 8))) << 32));
case 21: return ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8));
case 42: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) << 16));
case 84: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) << 2))) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) << 2))) << 8))) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) << 2))) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) << 2))) << 8))) << 32));
case 85: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | (((x & 192) << 14) | (((x & 192) << 14) << 2))) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | (((x & 192) << 14) | (((x & 192) << 14) << 2))) << 8))) | ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | (((x & 192) << 14) | (((x & 192) << 14) << 2))) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | (((x & 192) << 14) | (((x & 192) << 14) << 2))) << 8))) << 32));
case 43: return ((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) | ((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) << 16));
case 86: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | ((((x & 64) << 14) | (((x & 64) << 14) << 1)) | (((x & 128) << 15) | (((x & 128) << 15) << 1)))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | ((((x & 64) << 14) | (((x & 64) << 14) << 1)) | (((x & 128) << 15) | (((x & 128) << 15) << 1)))) << 8))) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | ((((x & 64) << 14) | (((x & 64) << 14) << 1)) | (((x & 128) << 15) | (((x & 128) << 15) << 1)))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | ((((x & 64) << 14) | (((x & 64) << 14) << 1)) | (((x & 128) << 15) | (((x & 128) << 15) << 1)))) << 8))) << 32));
case 87: return ((((x & 255) | ((x & 255) << 8)) | (((x & 65280) << 8) | (((x & 65280) << 8) << 8))) | ((((x & 255) | ((x & 255) << 8)) | (((x & 65280) << 8) | (((x & 65280) << 8) << 8))) << 32));
case 11: return ((x & 15) | ((x & 15) << 4));
case 22: return (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8));
case 44: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) << 16));
case 88: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) << 4)) | (((((x & 8) << 21) | (((x & 8) << 21) << 1)) | ((((x & 8) << 21) | (((x & 8) << 21) << 1)) << 2)) | (((((x & 8) << 21) | (((x & 8) << 21) << 1)) | ((((x & 8) << 21) | (((x & 8) << 21) << 1)) << 2)) << 4)))) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) << 4)) | (((((x & 8) << 21) | (((x & 8) << 21) << 1)) | ((((x & 8) << 21) | (((x & 8) << 21) << 1)) << 2)) | (((((x & 8) << 21) | (((x & 8) << 21) << 1)) | ((((x & 8) << 21) | (((x & 8) << 21) << 1)) << 2)) << 4)))) << 32));
case 89: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | ((((x & 48) << 12) | (((x & 48) << 12) << 2)) << 4)) | ((((x & 192) << 18) | (((x & 192) << 18) << 2)) | ((((x & 192) << 18) | (((x & 192) << 18) << 2)) << 4)))) | ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | ((((x & 48) << 12) | (((x & 48) << 12) << 2)) << 4)) | ((((x & 192) << 18) | (((x & 192) << 18) << 2)) | ((((x & 192) << 18) | (((x & 192) << 18) << 2)) << 4)))) << 32));
case 45: return (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) | (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) << 16));
case 90: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | (((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) << 4)) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | (((x & 128) << 19) | (((x & 128) << 19) << 1))) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | (((x & 128) << 19) | (((x & 128) << 19) << 1))) << 4)))) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | (((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) << 4)) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | (((x & 128) << 19) | (((x & 128) << 19) << 1))) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | (((x & 128) << 19) | (((x & 128) << 19) << 1))) << 4)))) << 32));
case 91: return (((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) | ((((x & 3840) << 8) | (((x & 3840) << 8) << 4)) | (((x & 61440) << 12) | (((x & 61440) << 12) << 4)))) | (((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) | ((((x & 3840) << 8) | (((x & 3840) << 8) << 4)) | (((x & 61440) << 12) | (((x & 61440) << 12) << 4)))) << 32));
case 23: return ((x & 255) | ((x & 255) << 8));
case 46: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) << 16));
case 92: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | ((((x & 16) << 12) | (((x & 16) << 12) << 1)) << 2)) | ((((x & 32) << 15) | (((x & 32) << 15) << 1)) | ((((x & 32) << 15) | (((x & 32) << 15) << 1)) << 2))) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | ((((x & 64) << 18) | (((x & 64) << 18) << 1)) << 2)) | ((((x & 128) << 21) | (((x & 128) << 21) << 1)) | ((((x & 128) << 21) | (((x & 128) << 21) << 1)) << 2))))) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | ((((x & 16) << 12) | (((x & 16) << 12) << 1)) << 2)) | ((((x & 32) << 15) | (((x & 32) << 15) << 1)) | ((((x & 32) << 15) | (((x & 32) << 15) << 1)) << 2))) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | ((((x & 64) << 18) | (((x & 64) << 18) << 1)) << 2)) | ((((x & 128) << 21) | (((x & 128) << 21) << 1)) | ((((x & 128) << 21) | (((x & 128) << 21) << 1)) << 2))))) << 32));
case 93: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) | (((((x & 768) << 8) | (((x & 768) << 8) << 2)) | (((x & 3072) << 10) | (((x & 3072) << 10) << 2))) | ((((x & 12288) << 12) | (((x & 12288) << 12) << 2)) | (((x & 49152) << 14) | (((x & 49152) << 14) << 2))))) | ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) | (((((x & 768) << 8) | (((x & 768) << 8) << 2)) | (((x & 3072) << 10) | (((x & 3072) << 10) << 2))) | ((((x & 12288) << 12) | (((x & 12288) << 12) << 2)) | (((x & 49152) << 14) | (((x & 49152) << 14) << 2))))) << 32));
case 47: return ((x & 65535) | ((x & 65535) << 16));
case 94: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) | ((((((x & 256) << 8) | (((x & 256) << 8) << 1)) | (((x & 512) << 9) | (((x & 512) << 9) << 1))) | ((((x & 1024) << 10) | (((x & 1024) << 10) << 1)) | (((x & 2048) << 11) | (((x & 2048) << 11) << 1)))) | (((((x & 4096) << 12) | (((x & 4096) << 12) << 1)) | (((x & 8192) << 13) | (((x & 8192) << 13) << 1))) | ((((x & 16384) << 14) | (((x & 16384) << 14) << 1)) | (((x & 32768) << 15) | (((x & 32768) << 15) << 1)))))) | (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) | ((((((x & 256) << 8) | (((x & 256) << 8) << 1)) | (((x & 512) << 9) | (((x & 512) << 9) << 1))) | ((((x & 1024) << 10) | (((x & 1024) << 10) << 1)) | (((x & 2048) << 11) | (((x & 2048) << 11) << 1)))) | (((((x & 4096) << 12) | (((x & 4096) << 12) << 1)) | (((x & 8192) << 13) | (((x & 8192) << 13) << 1))) | ((((x & 16384) << 14) | (((x & 16384) << 14) << 1)) | (((x & 32768) << 15) | (((x & 32768) << 15) << 1)))))) << 32));
case 95: return ((x & 4294967295) | ((x & 4294967295) << 32));
case 3: return (x & 3);
case 6: return (((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1)));
case 12: return ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2)));
case 24: return (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4)));
case 48: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) | ((((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) | (((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) << 4)) | ((((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) | (((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) << 4)) << 8)));
case 96: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) << 16)) | (((((((x & 2) << 31) | (((x & 2) << 31) << 1)) | ((((x & 2) << 31) | (((x & 2) << 31) << 1)) << 2)) | (((((x & 2) << 31) | (((x & 2) << 31) << 1)) | ((((x & 2) << 31) | (((x & 2) << 31) << 1)) << 2)) << 4)) | ((((((x & 2) << 31) | (((x & 2) << 31) << 1)) | ((((x & 2) << 31) | (((x & 2) << 31) << 1)) << 2)) | (((((x & 2) << 31) | (((x & 2) << 31) << 1)) | ((((x & 2) << 31) | (((x & 2) << 31) << 1)) << 2)) << 4)) << 8)) | (((((((x & 2) << 31) | (((x & 2) << 31) << 1)) | ((((x & 2) << 31) | (((x & 2) << 31) << 1)) << 2)) | (((((x & 2) << 31) | (((x & 2) << 31) << 1)) | ((((x & 2) << 31) | (((x & 2) << 31) << 1)) << 2)) << 4)) | ((((((x & 2) << 31) | (((x & 2) << 31) << 1)) | ((((x & 2) << 31) | (((x & 2) << 31) << 1)) << 2)) | (((((x & 2) << 31) | (((x & 2) << 31) << 1)) | ((((x & 2) << 31) | (((x & 2) << 31) << 1)) << 2)) << 4)) << 8)) << 16)));
case 97: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) | (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) << 16)) | ((((((x & 12) << 30) | (((x & 12) << 30) << 2)) | ((((x & 12) << 30) | (((x & 12) << 30) << 2)) << 4)) | (((((x & 12) << 30) | (((x & 12) << 30) << 2)) | ((((x & 12) << 30) | (((x & 12) << 30) << 2)) << 4)) << 8)) | ((((((x & 12) << 30) | (((x & 12) << 30) << 2)) | ((((x & 12) << 30) | (((x & 12) << 30) << 2)) << 4)) | (((((x & 12) << 30) | (((x & 12) << 30) << 2)) | ((((x & 12) << 30) | (((x & 12) << 30) << 2)) << 4)) << 8)) << 16)));
case 49: return (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) | (((((x & 12) << 14) | (((x & 12) << 14) << 2)) | ((((x & 12) << 14) | (((x & 12) << 14) << 2)) << 4)) | (((((x & 12) << 14) | (((x & 12) << 14) << 2)) | ((((x & 12) << 14) | (((x & 12) << 14) << 2)) << 4)) << 8)));
case 98: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) << 16)) | (((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | (((x & 8) << 31) | (((x & 8) << 31) << 1))) | (((((x & 4) << 30) | (((x & 4) << 30) << 1)) | (((x & 8) << 31) | (((x & 8) << 31) << 1))) << 4)) | ((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | (((x & 8) << 31) | (((x & 8) << 31) << 1))) | (((((x & 4) << 30) | (((x & 4) << 30) << 1)) | (((x & 8) << 31) | (((x & 8) << 31) << 1))) << 4)) << 8)) | (((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | (((x & 8) << 31) | (((x & 8) << 31) << 1))) | (((((x & 4) << 30) | (((x & 4) << 30) << 1)) | (((x & 8) << 31) | (((x & 8) << 31) << 1))) << 4)) | ((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | (((x & 8) << 31) | (((x & 8) << 31) << 1))) | (((((x & 4) << 30) | (((x & 4) << 30) << 1)) | (((x & 8) << 31) | (((x & 8) << 31) << 1))) << 4)) << 8)) << 16)));
case 99: return (((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) | ((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) << 16)) | (((((x & 240) << 28) | (((x & 240) << 28) << 4)) | ((((x & 240) << 28) | (((x & 240) << 28) << 4)) << 8)) | (((((x & 240) << 28) | (((x & 240) << 28) << 4)) | ((((x & 240) << 28) | (((x & 240) << 28) << 4)) << 8)) << 16)));
case 25: return ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4)));
case 50: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) << 4)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) << 4)) << 8)));
case 100: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) << 16)) | (((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) | ((((x & 8) << 33) | (((x & 8) << 33) << 1)) | ((((x & 8) << 33) | (((x & 8) << 33) << 1)) << 2))) | ((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) | ((((x & 8) << 33) | (((x & 8) << 33) << 1)) | ((((x & 8) << 33) | (((x & 8) << 33) << 1)) << 2))) << 8)) | (((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) | ((((x & 8) << 33) | (((x & 8) << 33) << 1)) | ((((x & 8) << 33) | (((x & 8) << 33) << 1)) << 2))) | ((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) | ((((x & 8) << 33) | (((x & 8) << 33) << 1)) | ((((x & 8) << 33) | (((x & 8) << 33) << 1)) << 2))) << 8)) << 16)));
case 101: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) | (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) << 16)) | ((((((x & 48) << 28) | (((x & 48) << 28) << 2)) | (((x & 192) << 30) | (((x & 192) << 30) << 2))) | (((((x & 48) << 28) | (((x & 48) << 28) << 2)) | (((x & 192) << 30) | (((x & 192) << 30) << 2))) << 8)) | ((((((x & 48) << 28) | (((x & 48) << 28) << 2)) | (((x & 192) << 30) | (((x & 192) << 30) << 2))) | (((((x & 48) << 28) | (((x & 48) << 28) << 2)) | (((x & 192) << 30) | (((x & 192) << 30) << 2))) << 8)) << 16)));
case 51: return ((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) | ((((x & 240) << 12) | (((x & 240) << 12) << 4)) | ((((x & 240) << 12) | (((x & 240) << 12) << 4)) << 8)));
case 102: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) << 16)) | (((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) | ((((x & 64) << 30) | (((x & 64) << 30) << 1)) | (((x & 128) << 31) | (((x & 128) << 31) << 1)))) | ((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) | ((((x & 64) << 30) | (((x & 64) << 30) << 1)) | (((x & 128) << 31) | (((x & 128) << 31) << 1)))) << 8)) | (((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) | ((((x & 64) << 30) | (((x & 64) << 30) << 1)) | (((x & 128) << 31) | (((x & 128) << 31) << 1)))) | ((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) | ((((x & 64) << 30) | (((x & 64) << 30) << 1)) | (((x & 128) << 31) | (((x & 128) << 31) << 1)))) << 8)) << 16)));
case 103: return ((((x & 255) | ((x & 255) << 8)) | (((x & 255) | ((x & 255) << 8)) << 16)) | ((((x & 65280) << 24) | (((x & 65280) << 24) << 8)) | ((((x & 65280) << 24) | (((x & 65280) << 24) << 8)) << 16)));
case 13: return (((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2)));
case 26: return (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4)));
case 52: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) << 2))) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) << 2))) << 8)));
case 104: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) << 16)) | (((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) | (((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) << 4)) | (((((x & 8) << 37) | (((x & 8) << 37) << 1)) | ((((x & 8) << 37) | (((x & 8) << 37) << 1)) << 2)) | (((((x & 8) << 37) | (((x & 8) << 37) << 1)) | ((((x & 8) << 37) | (((x & 8) << 37) << 1)) << 2)) << 4))) | (((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) | (((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) << 4)) | (((((x & 8) << 37) | (((x & 8) << 37) << 1)) | ((((x & 8) << 37) | (((x & 8) << 37) << 1)) << 2)) | (((((x & 8) << 37) | (((x & 8) << 37) << 1)) | ((((x & 8) << 37) | (((x & 8) << 37) << 1)) << 2)) << 4))) << 16)));
case 105: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) | (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) << 16)) | ((((((x & 48) << 28) | (((x & 48) << 28) << 2)) | ((((x & 48) << 28) | (((x & 48) << 28) << 2)) << 4)) | ((((x & 192) << 34) | (((x & 192) << 34) << 2)) | ((((x & 192) << 34) | (((x & 192) << 34) << 2)) << 4))) | ((((((x & 48) << 28) | (((x & 48) << 28) << 2)) | ((((x & 48) << 28) | (((x & 48) << 28) << 2)) << 4)) | ((((x & 192) << 34) | (((x & 192) << 34) << 2)) | ((((x & 192) << 34) | (((x & 192) << 34) << 2)) << 4))) << 16)));
case 53: return (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | (((x & 192) << 14) | (((x & 192) << 14) << 2))) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | (((x & 192) << 14) | (((x & 192) << 14) << 2))) << 8)));
case 106: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) << 16)) | (((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) | (((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) << 4)) | (((((x & 64) << 34) | (((x & 64) << 34) << 1)) | (((x & 128) << 35) | (((x & 128) << 35) << 1))) | (((((x & 64) << 34) | (((x & 64) << 34) << 1)) | (((x & 128) << 35) | (((x & 128) << 35) << 1))) << 4))) | (((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) | (((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) << 4)) | (((((x & 64) << 34) | (((x & 64) << 34) << 1)) | (((x & 128) << 35) | (((x & 128) << 35) << 1))) | (((((x & 64) << 34) | (((x & 64) << 34) << 1)) | (((x & 128) << 35) | (((x & 128) << 35) << 1))) << 4))) << 16)));
case 107: return (((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) | ((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) << 16)) | (((((x & 3840) << 24) | (((x & 3840) << 24) << 4)) | (((x & 61440) << 28) | (((x & 61440) << 28) << 4))) | (((((x & 3840) << 24) | (((x & 3840) << 24) << 4)) | (((x & 61440) << 28) | (((x & 61440) << 28) << 4))) << 16)));
case 27: return (((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4)));
case 54: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | ((((x & 64) << 14) | (((x & 64) << 14) << 1)) | (((x & 128) << 15) | (((x & 128) << 15) << 1)))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | ((((x & 64) << 14) | (((x & 64) << 14) << 1)) | (((x & 128) << 15) | (((x & 128) << 15) << 1)))) << 8)));
case 108: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) << 16)) | (((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | ((((x & 16) << 28) | (((x & 16) << 28) << 1)) << 2)) | ((((x & 32) << 31) | (((x & 32) << 31) << 1)) | ((((x & 32) << 31) | (((x & 32) << 31) << 1)) << 2))) | (((((x & 64) << 34) | (((x & 64) << 34) << 1)) | ((((x & 64) << 34) | (((x & 64) << 34) << 1)) << 2)) | ((((x & 128) << 37) | (((x & 128) << 37) << 1)) | ((((x & 128) << 37) | (((x & 128) << 37) << 1)) << 2)))) | (((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | ((((x & 16) << 28) | (((x & 16) << 28) << 1)) << 2)) | ((((x & 32) << 31) | (((x & 32) << 31) << 1)) | ((((x & 32) << 31) | (((x & 32) << 31) << 1)) << 2))) | (((((x & 64) << 34) | (((x & 64) << 34) << 1)) | ((((x & 64) << 34) | (((x & 64) << 34) << 1)) << 2)) | ((((x & 128) << 37) | (((x & 128) << 37) << 1)) | ((((x & 128) << 37) | (((x & 128) << 37) << 1)) << 2)))) << 16)));
case 109: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) | (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) << 16)) | ((((((x & 768) << 24) | (((x & 768) << 24) << 2)) | (((x & 3072) << 26) | (((x & 3072) << 26) << 2))) | ((((x & 12288) << 28) | (((x & 12288) << 28) << 2)) | (((x & 49152) << 30) | (((x & 49152) << 30) << 2)))) | ((((((x & 768) << 24) | (((x & 768) << 24) << 2)) | (((x & 3072) << 26) | (((x & 3072) << 26) << 2))) | ((((x & 12288) << 28) | (((x & 12288) << 28) << 2)) | (((x & 49152) << 30) | (((x & 49152) << 30) << 2)))) << 16)));
case 55: return (((x & 255) | ((x & 255) << 8)) | (((x & 65280) << 8) | (((x & 65280) << 8) << 8)));
case 110: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) | ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) << 16)) | (((((((x & 256) << 24) | (((x & 256) << 24) << 1)) | (((x & 512) << 25) | (((x & 512) << 25) << 1))) | ((((x & 1024) << 26) | (((x & 1024) << 26) << 1)) | (((x & 2048) << 27) | (((x & 2048) << 27) << 1)))) | (((((x & 4096) << 28) | (((x & 4096) << 28) << 1)) | (((x & 8192) << 29) | (((x & 8192) << 29) << 1))) | ((((x & 16384) << 30) | (((x & 16384) << 30) << 1)) | (((x & 32768) << 31) | (((x & 32768) << 31) << 1))))) | (((((((x & 256) << 24) | (((x & 256) << 24) << 1)) | (((x & 512) << 25) | (((x & 512) << 25) << 1))) | ((((x & 1024) << 26) | (((x & 1024) << 26) << 1)) | (((x & 2048) << 27) | (((x & 2048) << 27) << 1)))) | (((((x & 4096) << 28) | (((x & 4096) << 28) << 1)) | (((x & 8192) << 29) | (((x & 8192) << 29) << 1))) | ((((x & 16384) << 30) | (((x & 16384) << 30) << 1)) | (((x & 32768) << 31) | (((x & 32768) << 31) << 1))))) << 16)));
case 111: return (((x & 65535) | ((x & 65535) << 16)) | (((x & 4294901760) << 16) | (((x & 4294901760) << 16) << 16)));
case 7: return (x & 15);
case 14: return ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1))));
case 28: return (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2))));
case 56: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) << 4)) | (((((x & 8) << 21) | (((x & 8) << 21) << 1)) | ((((x & 8) << 21) | (((x & 8) << 21) << 1)) << 2)) | (((((x & 8) << 21) | (((x & 8) << 21) << 1)) | ((((x & 8) << 21) | (((x & 8) << 21) << 1)) << 2)) << 4))));
case 112: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) << 8)) | ((((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) | (((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) << 4)) | ((((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) | (((((x & 2) << 15) | (((x & 2) << 15) << 1)) | ((((x & 2) << 15) | (((x & 2) << 15) << 1)) << 2)) << 4)) << 8))) | (((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) | (((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) << 4)) | ((((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) | (((((x & 4) << 30) | (((x & 4) << 30) << 1)) | ((((x & 4) << 30) | (((x & 4) << 30) << 1)) << 2)) << 4)) << 8)) | ((((((x & 8) << 45) | (((x & 8) << 45) << 1)) | ((((x & 8) << 45) | (((x & 8) << 45) << 1)) << 2)) | (((((x & 8) << 45) | (((x & 8) << 45) << 1)) | ((((x & 8) << 45) | (((x & 8) << 45) << 1)) << 2)) << 4)) | ((((((x & 8) << 45) | (((x & 8) << 45) << 1)) | ((((x & 8) << 45) | (((x & 8) << 45) << 1)) << 2)) | (((((x & 8) << 45) | (((x & 8) << 45) << 1)) | ((((x & 8) << 45) | (((x & 8) << 45) << 1)) << 2)) << 4)) << 8))));
case 113: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) << 8)) | (((((x & 12) << 14) | (((x & 12) << 14) << 2)) | ((((x & 12) << 14) | (((x & 12) << 14) << 2)) << 4)) | (((((x & 12) << 14) | (((x & 12) << 14) << 2)) | ((((x & 12) << 14) | (((x & 12) << 14) << 2)) << 4)) << 8))) | ((((((x & 48) << 28) | (((x & 48) << 28) << 2)) | ((((x & 48) << 28) | (((x & 48) << 28) << 2)) << 4)) | (((((x & 48) << 28) | (((x & 48) << 28) << 2)) | ((((x & 48) << 28) | (((x & 48) << 28) << 2)) << 4)) << 8)) | (((((x & 192) << 42) | (((x & 192) << 42) << 2)) | ((((x & 192) << 42) | (((x & 192) << 42) << 2)) << 4)) | (((((x & 192) << 42) | (((x & 192) << 42) << 2)) | ((((x & 192) << 42) | (((x & 192) << 42) << 2)) << 4)) << 8))));
case 57: return (((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | ((((x & 48) << 12) | (((x & 48) << 12) << 2)) << 4)) | ((((x & 192) << 18) | (((x & 192) << 18) << 2)) | ((((x & 192) << 18) | (((x & 192) << 18) << 2)) << 4))));
case 114: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) << 8)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) << 4)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | (((x & 8) << 15) | (((x & 8) << 15) << 1))) << 4)) << 8))) | (((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) | (((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) << 4)) | ((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) | (((((x & 16) << 28) | (((x & 16) << 28) << 1)) | (((x & 32) << 29) | (((x & 32) << 29) << 1))) << 4)) << 8)) | ((((((x & 64) << 42) | (((x & 64) << 42) << 1)) | (((x & 128) << 43) | (((x & 128) << 43) << 1))) | (((((x & 64) << 42) | (((x & 64) << 42) << 1)) | (((x & 128) << 43) | (((x & 128) << 43) << 1))) << 4)) | ((((((x & 64) << 42) | (((x & 64) << 42) << 1)) | (((x & 128) << 43) | (((x & 128) << 43) << 1))) | (((((x & 64) << 42) | (((x & 64) << 42) << 1)) | (((x & 128) << 43) | (((x & 128) << 43) << 1))) << 4)) << 8))));
case 115: return (((((x & 15) | ((x & 15) << 4)) | (((x & 15) | ((x & 15) << 4)) << 8)) | ((((x & 240) << 12) | (((x & 240) << 12) << 4)) | ((((x & 240) << 12) | (((x & 240) << 12) << 4)) << 8))) | (((((x & 3840) << 24) | (((x & 3840) << 24) << 4)) | ((((x & 3840) << 24) | (((x & 3840) << 24) << 4)) << 8)) | ((((x & 61440) << 36) | (((x & 61440) << 36) << 4)) | ((((x & 61440) << 36) | (((x & 61440) << 36) << 4)) << 8))));
case 29: return ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2))));
case 58: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | (((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) << 4)) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | (((x & 128) << 19) | (((x & 128) << 19) << 1))) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | (((x & 128) << 19) | (((x & 128) << 19) << 1))) << 4))));
case 116: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) << 8)) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) << 2))) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) | ((((x & 8) << 17) | (((x & 8) << 17) << 1)) << 2))) << 8))) | (((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | ((((x & 16) << 28) | (((x & 16) << 28) << 1)) << 2)) | ((((x & 32) << 31) | (((x & 32) << 31) << 1)) | ((((x & 32) << 31) | (((x & 32) << 31) << 1)) << 2))) | ((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | ((((x & 16) << 28) | (((x & 16) << 28) << 1)) << 2)) | ((((x & 32) << 31) | (((x & 32) << 31) << 1)) | ((((x & 32) << 31) | (((x & 32) << 31) << 1)) << 2))) << 8)) | ((((((x & 64) << 42) | (((x & 64) << 42) << 1)) | ((((x & 64) << 42) | (((x & 64) << 42) << 1)) << 2)) | ((((x & 128) << 45) | (((x & 128) << 45) << 1)) | ((((x & 128) << 45) | (((x & 128) << 45) << 1)) << 2))) | ((((((x & 64) << 42) | (((x & 64) << 42) << 1)) | ((((x & 64) << 42) | (((x & 64) << 42) << 1)) << 2)) | ((((x & 128) << 45) | (((x & 128) << 45) << 1)) | ((((x & 128) << 45) | (((x & 128) << 45) << 1)) << 2))) << 8))));
case 117: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) << 8)) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | (((x & 192) << 14) | (((x & 192) << 14) << 2))) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | (((x & 192) << 14) | (((x & 192) << 14) << 2))) << 8))) | ((((((x & 768) << 24) | (((x & 768) << 24) << 2)) | (((x & 3072) << 26) | (((x & 3072) << 26) << 2))) | (((((x & 768) << 24) | (((x & 768) << 24) << 2)) | (((x & 3072) << 26) | (((x & 3072) << 26) << 2))) << 8)) | (((((x & 12288) << 36) | (((x & 12288) << 36) << 2)) | (((x & 49152) << 38) | (((x & 49152) << 38) << 2))) | (((((x & 12288) << 36) | (((x & 12288) << 36) << 2)) | (((x & 49152) << 38) | (((x & 49152) << 38) << 2))) << 8))));
case 59: return ((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) | ((((x & 3840) << 8) | (((x & 3840) << 8) << 4)) | (((x & 61440) << 12) | (((x & 61440) << 12) << 4))));
case 118: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) << 8)) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | ((((x & 64) << 14) | (((x & 64) << 14) << 1)) | (((x & 128) << 15) | (((x & 128) << 15) << 1)))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | ((((x & 64) << 14) | (((x & 64) << 14) << 1)) | (((x & 128) << 15) | (((x & 128) << 15) << 1)))) << 8))) | (((((((x & 256) << 24) | (((x & 256) << 24) << 1)) | (((x & 512) << 25) | (((x & 512) << 25) << 1))) | ((((x & 1024) << 26) | (((x & 1024) << 26) << 1)) | (((x & 2048) << 27) | (((x & 2048) << 27) << 1)))) | ((((((x & 256) << 24) | (((x & 256) << 24) << 1)) | (((x & 512) << 25) | (((x & 512) << 25) << 1))) | ((((x & 1024) << 26) | (((x & 1024) << 26) << 1)) | (((x & 2048) << 27) | (((x & 2048) << 27) << 1)))) << 8)) | ((((((x & 4096) << 36) | (((x & 4096) << 36) << 1)) | (((x & 8192) << 37) | (((x & 8192) << 37) << 1))) | ((((x & 16384) << 38) | (((x & 16384) << 38) << 1)) | (((x & 32768) << 39) | (((x & 32768) << 39) << 1)))) | ((((((x & 4096) << 36) | (((x & 4096) << 36) << 1)) | (((x & 8192) << 37) | (((x & 8192) << 37) << 1))) | ((((x & 16384) << 38) | (((x & 16384) << 38) << 1)) | (((x & 32768) << 39) | (((x & 32768) << 39) << 1)))) << 8))));
case 119: return ((((x & 255) | ((x & 255) << 8)) | (((x & 65280) << 8) | (((x & 65280) << 8) << 8))) | ((((x & 16711680) << 16) | (((x & 16711680) << 16) << 8)) | (((x & 4278190080) << 24) | (((x & 4278190080) << 24) << 8))));
case 15: return (x & 255);
case 30: return (((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1)))));
case 60: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | ((((x & 16) << 12) | (((x & 16) << 12) << 1)) << 2)) | ((((x & 32) << 15) | (((x & 32) << 15) << 1)) | ((((x & 32) << 15) | (((x & 32) << 15) << 1)) << 2))) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | ((((x & 64) << 18) | (((x & 64) << 18) << 1)) << 2)) | ((((x & 128) << 21) | (((x & 128) << 21) << 1)) | ((((x & 128) << 21) | (((x & 128) << 21) << 1)) << 2)))));
case 120: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) << 4)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) | (((((x & 2) << 7) | (((x & 2) << 7) << 1)) | ((((x & 2) << 7) | (((x & 2) << 7) << 1)) << 2)) << 4))) | ((((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) | (((((x & 4) << 14) | (((x & 4) << 14) << 1)) | ((((x & 4) << 14) | (((x & 4) << 14) << 1)) << 2)) << 4)) | (((((x & 8) << 21) | (((x & 8) << 21) << 1)) | ((((x & 8) << 21) | (((x & 8) << 21) << 1)) << 2)) | (((((x & 8) << 21) | (((x & 8) << 21) << 1)) | ((((x & 8) << 21) | (((x & 8) << 21) << 1)) << 2)) << 4)))) | (((((((x & 16) << 28) | (((x & 16) << 28) << 1)) | ((((x & 16) << 28) | (((x & 16) << 28) << 1)) << 2)) | (((((x & 16) << 28) | (((x & 16) << 28) << 1)) | ((((x & 16) << 28) | (((x & 16) << 28) << 1)) << 2)) << 4)) | (((((x & 32) << 35) | (((x & 32) << 35) << 1)) | ((((x & 32) << 35) | (((x & 32) << 35) << 1)) << 2)) | (((((x & 32) << 35) | (((x & 32) << 35) << 1)) | ((((x & 32) << 35) | (((x & 32) << 35) << 1)) << 2)) << 4))) | ((((((x & 64) << 42) | (((x & 64) << 42) << 1)) | ((((x & 64) << 42) | (((x & 64) << 42) << 1)) << 2)) | (((((x & 64) << 42) | (((x & 64) << 42) << 1)) | ((((x & 64) << 42) | (((x & 64) << 42) << 1)) << 2)) << 4)) | (((((x & 128) << 49) | (((x & 128) << 49) << 1)) | ((((x & 128) << 49) | (((x & 128) << 49) << 1)) << 2)) | (((((x & 128) << 49) | (((x & 128) << 49) << 1)) | ((((x & 128) << 49) | (((x & 128) << 49) << 1)) << 2)) << 4)))));
case 121: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 3) | ((x & 3) << 2)) << 4)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) | ((((x & 12) << 6) | (((x & 12) << 6) << 2)) << 4))) | (((((x & 48) << 12) | (((x & 48) << 12) << 2)) | ((((x & 48) << 12) | (((x & 48) << 12) << 2)) << 4)) | ((((x & 192) << 18) | (((x & 192) << 18) << 2)) | ((((x & 192) << 18) | (((x & 192) << 18) << 2)) << 4)))) | ((((((x & 768) << 24) | (((x & 768) << 24) << 2)) | ((((x & 768) << 24) | (((x & 768) << 24) << 2)) << 4)) | ((((x & 3072) << 30) | (((x & 3072) << 30) << 2)) | ((((x & 3072) << 30) | (((x & 3072) << 30) << 2)) << 4))) | (((((x & 12288) << 36) | (((x & 12288) << 36) << 2)) | ((((x & 12288) << 36) | (((x & 12288) << 36) << 2)) << 4)) | ((((x & 49152) << 42) | (((x & 49152) << 42) << 2)) | ((((x & 49152) << 42) | (((x & 49152) << 42) << 2)) << 4)))));
case 61: return (((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) | (((((x & 768) << 8) | (((x & 768) << 8) << 2)) | (((x & 3072) << 10) | (((x & 3072) << 10) << 2))) | ((((x & 12288) << 12) | (((x & 12288) << 12) << 2)) | (((x & 49152) << 14) | (((x & 49152) << 14) << 2)))));
case 122: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) << 4)) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | (((x & 8) << 7) | (((x & 8) << 7) << 1))) << 4))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) | (((((x & 16) << 12) | (((x & 16) << 12) << 1)) | (((x & 32) << 13) | (((x & 32) << 13) << 1))) << 4)) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | (((x & 128) << 19) | (((x & 128) << 19) << 1))) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | (((x & 128) << 19) | (((x & 128) << 19) << 1))) << 4)))) | (((((((x & 256) << 24) | (((x & 256) << 24) << 1)) | (((x & 512) << 25) | (((x & 512) << 25) << 1))) | (((((x & 256) << 24) | (((x & 256) << 24) << 1)) | (((x & 512) << 25) | (((x & 512) << 25) << 1))) << 4)) | (((((x & 1024) << 30) | (((x & 1024) << 30) << 1)) | (((x & 2048) << 31) | (((x & 2048) << 31) << 1))) | (((((x & 1024) << 30) | (((x & 1024) << 30) << 1)) | (((x & 2048) << 31) | (((x & 2048) << 31) << 1))) << 4))) | ((((((x & 4096) << 36) | (((x & 4096) << 36) << 1)) | (((x & 8192) << 37) | (((x & 8192) << 37) << 1))) | (((((x & 4096) << 36) | (((x & 4096) << 36) << 1)) | (((x & 8192) << 37) | (((x & 8192) << 37) << 1))) << 4)) | (((((x & 16384) << 42) | (((x & 16384) << 42) << 1)) | (((x & 32768) << 43) | (((x & 32768) << 43) << 1))) | (((((x & 16384) << 42) | (((x & 16384) << 42) << 1)) | (((x & 32768) << 43) | (((x & 32768) << 43) << 1))) << 4)))));
case 123: return (((((x & 15) | ((x & 15) << 4)) | (((x & 240) << 4) | (((x & 240) << 4) << 4))) | ((((x & 3840) << 8) | (((x & 3840) << 8) << 4)) | (((x & 61440) << 12) | (((x & 61440) << 12) << 4)))) | (((((x & 983040) << 16) | (((x & 983040) << 16) << 4)) | (((x & 15728640) << 20) | (((x & 15728640) << 20) << 4))) | ((((x & 251658240) << 24) | (((x & 251658240) << 24) << 4)) | (((x & 4026531840) << 28) | (((x & 4026531840) << 28) << 4)))));
case 31: return (x & 65535);
case 62: return ((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) | ((((((x & 256) << 8) | (((x & 256) << 8) << 1)) | (((x & 512) << 9) | (((x & 512) << 9) << 1))) | ((((x & 1024) << 10) | (((x & 1024) << 10) << 1)) | (((x & 2048) << 11) | (((x & 2048) << 11) << 1)))) | (((((x & 4096) << 12) | (((x & 4096) << 12) << 1)) | (((x & 8192) << 13) | (((x & 8192) << 13) << 1))) | ((((x & 16384) << 14) | (((x & 16384) << 14) << 1)) | (((x & 32768) << 15) | (((x & 32768) << 15) << 1))))));
case 124: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 1) | ((x & 1) << 1)) << 2)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) | ((((x & 2) << 3) | (((x & 2) << 3) << 1)) << 2))) | (((((x & 4) << 6) | (((x & 4) << 6) << 1)) | ((((x & 4) << 6) | (((x & 4) << 6) << 1)) << 2)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) | ((((x & 8) << 9) | (((x & 8) << 9) << 1)) << 2)))) | ((((((x & 16) << 12) | (((x & 16) << 12) << 1)) | ((((x & 16) << 12) | (((x & 16) << 12) << 1)) << 2)) | ((((x & 32) << 15) | (((x & 32) << 15) << 1)) | ((((x & 32) << 15) | (((x & 32) << 15) << 1)) << 2))) | (((((x & 64) << 18) | (((x & 64) << 18) << 1)) | ((((x & 64) << 18) | (((x & 64) << 18) << 1)) << 2)) | ((((x & 128) << 21) | (((x & 128) << 21) << 1)) | ((((x & 128) << 21) | (((x & 128) << 21) << 1)) << 2))))) | (((((((x & 256) << 24) | (((x & 256) << 24) << 1)) | ((((x & 256) << 24) | (((x & 256) << 24) << 1)) << 2)) | ((((x & 512) << 27) | (((x & 512) << 27) << 1)) | ((((x & 512) << 27) | (((x & 512) << 27) << 1)) << 2))) | (((((x & 1024) << 30) | (((x & 1024) << 30) << 1)) | ((((x & 1024) << 30) | (((x & 1024) << 30) << 1)) << 2)) | ((((x & 2048) << 33) | (((x & 2048) << 33) << 1)) | ((((x & 2048) << 33) | (((x & 2048) << 33) << 1)) << 2)))) | ((((((x & 4096) << 36) | (((x & 4096) << 36) << 1)) | ((((x & 4096) << 36) | (((x & 4096) << 36) << 1)) << 2)) | ((((x & 8192) << 39) | (((x & 8192) << 39) << 1)) | ((((x & 8192) << 39) | (((x & 8192) << 39) << 1)) << 2))) | (((((x & 16384) << 42) | (((x & 16384) << 42) << 1)) | ((((x & 16384) << 42) | (((x & 16384) << 42) << 1)) << 2)) | ((((x & 32768) << 45) | (((x & 32768) << 45) << 1)) | ((((x & 32768) << 45) | (((x & 32768) << 45) << 1)) << 2))))));
case 125: return ((((((x & 3) | ((x & 3) << 2)) | (((x & 12) << 2) | (((x & 12) << 2) << 2))) | ((((x & 48) << 4) | (((x & 48) << 4) << 2)) | (((x & 192) << 6) | (((x & 192) << 6) << 2)))) | (((((x & 768) << 8) | (((x & 768) << 8) << 2)) | (((x & 3072) << 10) | (((x & 3072) << 10) << 2))) | ((((x & 12288) << 12) | (((x & 12288) << 12) << 2)) | (((x & 49152) << 14) | (((x & 49152) << 14) << 2))))) | ((((((x & 196608) << 16) | (((x & 196608) << 16) << 2)) | (((x & 786432) << 18) | (((x & 786432) << 18) << 2))) | ((((x & 3145728) << 20) | (((x & 3145728) << 20) << 2)) | (((x & 12582912) << 22) | (((x & 12582912) << 22) << 2)))) | (((((x & 50331648) << 24) | (((x & 50331648) << 24) << 2)) | (((x & 201326592) << 26) | (((x & 201326592) << 26) << 2))) | ((((x & 805306368) << 28) | (((x & 805306368) << 28) << 2)) | (((x & 3221225472) << 30) | (((x & 3221225472) << 30) << 2))))));
case 63: return (x & 4294967295);
case 126: return (((((((x & 1) | ((x & 1) << 1)) | (((x & 2) << 1) | (((x & 2) << 1) << 1))) | ((((x & 4) << 2) | (((x & 4) << 2) << 1)) | (((x & 8) << 3) | (((x & 8) << 3) << 1)))) | (((((x & 16) << 4) | (((x & 16) << 4) << 1)) | (((x & 32) << 5) | (((x & 32) << 5) << 1))) | ((((x & 64) << 6) | (((x & 64) << 6) << 1)) | (((x & 128) << 7) | (((x & 128) << 7) << 1))))) | ((((((x & 256) << 8) | (((x & 256) << 8) << 1)) | (((x & 512) << 9) | (((x & 512) << 9) << 1))) | ((((x & 1024) << 10) | (((x & 1024) << 10) << 1)) | (((x & 2048) << 11) | (((x & 2048) << 11) << 1)))) | (((((x & 4096) << 12) | (((x & 4096) << 12) << 1)) | (((x & 8192) << 13) | (((x & 8192) << 13) << 1))) | ((((x & 16384) << 14) | (((x & 16384) << 14) << 1)) | (((x & 32768) << 15) | (((x & 32768) << 15) << 1)))))) | (((((((x & 65536) << 16) | (((x & 65536) << 16) << 1)) | (((x & 131072) << 17) | (((x & 131072) << 17) << 1))) | ((((x & 262144) << 18) | (((x & 262144) << 18) << 1)) | (((x & 524288) << 19) | (((x & 524288) << 19) << 1)))) | (((((x & 1048576) << 20) | (((x & 1048576) << 20) << 1)) | (((x & 2097152) << 21) | (((x & 2097152) << 21) << 1))) | ((((x & 4194304) << 22) | (((x & 4194304) << 22) << 1)) | (((x & 8388608) << 23) | (((x & 8388608) << 23) << 1))))) | ((((((x & 16777216) << 24) | (((x & 16777216) << 24) << 1)) | (((x & 33554432) << 25) | (((x & 33554432) << 25) << 1))) | ((((x & 67108864) << 26) | (((x & 67108864) << 26) << 1)) | (((x & 134217728) << 27) | (((x & 134217728) << 27) << 1)))) | (((((x & 268435456) << 28) | (((x & 268435456) << 28) << 1)) | (((x & 536870912) << 29) | (((x & 536870912) << 29) << 1))) | ((((x & 1073741824) << 30) | (((x & 1073741824) << 30) << 1)) | (((x & 2147483648) << 31) | (((x & 2147483648) << 31) << 1)))))));
case 127: return x;
    }
}

#if 0


def consecutive(S):
    for k in range(len(S)-1):
        if S[k] + 1 != S[k+1]:
            return False
    return True

def shift(x, k):
    if k == 0:
        return x
    if k < 0:
        return "(%s >> %d)" % (x,-k)
    return "(%s << %d)" % (x, k)

def compile(S, offset):
    if consecutive(S):
        k = S[0]
        l = len(S)
        if l == 64:
            return "x"
        mask = ((1 << l)-1) << k
        return shift("(x & %d)" % mask, offset - k)
    l2 = len(S) >> 1
    S1 = S[0:l2]
    S2 = S[l2:]
    if S1 == S2:
        r1 = compile(S1, offset)
        return "(%s | (%s << %d))" % (r1, r1, l2)
    r1 = compile(S1, offset)
    r2 = compile(S2, offset + l2)
    return "(%s | %s)" % (r1, r2)

def mems2index(mems, bound):
    k = 0
    i = 0
    for m in mems:
        if m:
            k |= (1 << i)
        i += 1
    k |= (1 << i)
    return k

def precompute(mems, bound):
    K = 0
    j = 0
    coeff = {}
    deficit = {}
    for m in mems:
        if m:
            coeff[K] = (1 << j)
            deficit[K] = j - K
            K += 1
        j += 1
    indices = []
    for j in range(1 << len(mems)):
        k = 0
        for i in range(K):
            if 0 != (j & coeff[i]):
                k += (1 << i)
        indices += [k]
    idx = mems2index(mems, bound)
    instr = compile(indices, 0)
    print("case %d: return %s;" % (idx, instr))

def combinations(mems, n, m):
    if n == 0:
        return
    precompute(mems, m)
    combinations([False] + mems, n - 1, m)
    combinations([True] + mems, n - 1, m)

combinations([], 7, 7)
    
#endif
